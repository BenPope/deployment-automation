apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "redpanda.fullname" . }}
spec:
  selector:
    matchLabels:
     app: {{ template "redpanda.name" . }} 
  serviceName: {{ template "redpanda.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: redpanda
    spec:
      initContainers:
        # - name: init-mydb
        #   image: busybox:1.28
        #   command: ["sh", "-c"]
        #   args: ["nslookup redpanda-headless"]
        - name: redpanda-configurator
          image: vectorized/redpanda
          env: 
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          command: ["/bin/sh", "-c"]
          args:
            - >
              apt update;
              apt install -y dnsutils; # jq;
              cp /tmp/base-config/redpanda.yaml /tmp/config/;
              rpk --config /tmp/config/redpanda.yaml config set redpanda.advertised_kafka_api.address $MY_POD_IP;
              rpk --config /tmp/config/redpanda.yaml config set redpanda.advertised_kafka_api.port 9092;
              NODE_ID=${HOSTNAME##*-};
              rpk --config /tmp/config/redpanda.yaml config set rpk.smp 2;
              echo "NODE_ID: $NODE_ID";
              if [ "$NODE_ID" = "0" ]; then
                rpk --config /tmp/config/redpanda.yaml config set redpanda.seed_servers '[]' --format yaml;
              fi;
              cat /tmp/config/redpanda.yaml;
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          volumeMounts:
            - name: base-config
              mountPath: /tmp/base-config
            - name: config
              mountPath: /tmp/config 
      containers:
        - name: redpanda
          image: vectorized/redpanda
          # command: ["/bin/sh", "-c"]
          args: ["--config /tmp/config/redpanda.yaml", "start"]
          # args:
          #   ["cat /tmp/config/redpanda.yaml; cat /etc/redpanda/redpanda.yaml"]
          ports:
            - containerPort: 9644
              name: admin
            - containerPort: 9092
              name: kafka
            - containerPort: 33145
              name: rpc
          volumeMounts:
            - name: config
              mountPath: /tmp/config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
        - name: base-config
          configMap:
            name: base-config
        - name: config
          emptyDir: {}
